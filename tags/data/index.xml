<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Data &amp; Science: A blog</title>
    <link>https://mattkcole.github.io/tags/data/</link>
    <description>Recent content in Data on Data &amp; Science: A blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mattkcole.github.io/tags/data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beyond %&gt;%, Alternative Pipes in R</title>
      <link>https://mattkcole.github.io/2017/07/02/pipes/</link>
      <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mattkcole.github.io/2017/07/02/pipes/</guid>
      <description>Data scientists and the Mario Brothers agree - pipes rock.
If you have been using R for data ‘plumbing’/wrangling etc. you have undoubtedly came across the fantastic dplyr package and then by default, the the standard pipe.
The pipes we will be discussing today are from the magrittr pacakge, which is where dplyr’s ‘standard’ pipe comes from (repo is here). Straight from the highly recommended magrittr vignette, the purpose of pipes and the magrittr package itself is to “decrease development time and to improve readability and maintainability of code” - who wouldn’t like that?</description>
    </item>
    
  </channel>
</rss>